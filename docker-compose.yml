services:
  seismotracker-init:
    image: ghcr.io/konamata/seismotracker/init:arm64-latest # arm64
    # image: ghcr.io/konamata/seismotracker/init:latest # amd64
    build:
      context: ./init
      dockerfile: Dockerfile
    pull_policy: build
    container_name: seismotracker-init
    volumes:
      - /project/seismotracker/data/geonames:/data:rw
    restart: no
    networks:
      - seismotracker-network
    labels:
      com.centurylinklabs.watchtower.enable: false

  seismotracker-fetcher:
    image: ghcr.io/konamata/seismotracker/fetcher:arm64-latest # arm64
    # image: ghcr.io/konamata/seismotracker/fetcher:latest # amd64
    build:
      context: ./seismotracker
      dockerfile: Dockerfile
    pull_policy: build
    container_name: seismotracker-fetcher
    restart: always
    init: true
    depends_on:
      seismotracker-postgres:
        condition: service_healthy
    environment:
      POSTGRES_URI: postgres://postgres:password@seismotracker-postgres:5432/seismotracker?sslmode=disable
    networks:
      - seismotracker-network
    labels:
      com.centurylinklabs.watchtower.enable: false

  seismotracker-lightdash:
    image: ghcr.io/konamata/seismotracker/lightdash:arm64-latest # arm64
    # image: ghcr.io/konamata/seismotracker/lightdash:latest # amd64
    build:
      context: ./lightdash
      dockerfile: dockerfile
    pull_policy: always
    restart: always
    container_name: seismotracker-lightdash
    init: true
    depends_on:
      seismotracker-postgres:
        condition: service_healthy
    environment:
      - PGHOST=seismotracker-postgres
      - PGPORT=5432
      - PGUSER=postgres
      - PGPASSWORD=password
      - PGDATABASE=lightdash
      - POSTGRES_HOST_AUTH_METHOD=trust
      - SECURE_COOKIES=false
      - TRUST_PROXY=false
      - LIGHTDASH_SECRET=endoplazmikretikretikulum
      - PORT=8081
      - LIGHTDASH_LOG_LEVEL=debug
      - LIGHTDASH_INSTALL_TYPE=docker_image
      - SITE_URL=http://localhost:8081
      - LIGHTDASH_QUERY_MAX_LIMIT=50000
      - ALLOW_MULTIPLE_ORGS=false
      - LIGHTDASH_MAX_PAYLOAD=50mb
      - HEADLESS_BROWSER_HOST=headless-browser
      - HEADLESS_BROWSER_PORT=3000
      - LIGHTDASH_INSTALL_ID=
      - AUTH_DISABLE_PASSWORD_AUTHENTICATION=
      - AUTH_ENABLE_GROUP_SYNC=
      - AUTH_GOOGLE_ENABLED=
      - AUTH_GOOGLE_OAUTH2_CLIENT_ID=
      - AUTH_GOOGLE_OAUTH2_CLIENT_SECRET=
      - EMAIL_SMTP_HOST=
      - EMAIL_SMTP_PORT=
      - EMAIL_SMTP_SECURE=
      - EMAIL_SMTP_USER=
      - EMAIL_SMTP_PASSWORD=
      - EMAIL_SMTP_ALLOW_INVALID_CERT=
      - EMAIL_SMTP_SENDER_NAME=
      - EMAIL_SMTP_SENDER_EMAIL=
      - RUDDERSTACK_WRITE_KEY=
      - SCHEDULER_ENABLED=true
      - GROUPS_ENABLED=false
      - POSTHOG_PROJECT_API_KEY=
      - POSTHOG_FE_API_HOST=
      - POSTHOG_BE_API_HOST=
    volumes:
      - /project/seismotracker/lightdash:/usr/app/dbt
    ports:
      - 8081:8081
    networks:
      - seismotracker-network
    labels:
      com.centurylinklabs.watchtower.enable: false

  seismotracker-postgres:
    image: ghcr.io/konamata/seismotracker/postgres-gis:arm64-latest # arm64
    # image: ghcr.io/konamata/seismotracker/postgres-gis:latest # amd64
    build:
      context: ./postgres
      dockerfile: Dockerfile
    pull_policy: always
    restart: always
    container_name: seismotracker-postgres
    # ports:
      # - 5432:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: seismotracker
    volumes:
      - /project/seismotracker/data/postgres:/var/lib/postgresql/data
      - /project/seismotracker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - /project/seismotracker/data/geonames:/geonames:ro
    networks:
      - seismotracker-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 15s
      timeout: 5s
      retries: 5
    labels:
      com.centurylinklabs.watchtower.enable: true

  seismotracker-headless-browser:
    image: ghcr.io/browserless/chromium:v2.24.3
    restart: always
    container_name: seismotracker-headless-browser
    init: true
    depends_on:
      - seismotracker-lightdash
    ports:
      - 3001:3000
    networks:
      - seismotracker-network
    labels:
      com.centurylinklabs.watchtower.enable: true

  seismotracker-dbt:
    image: ghcr.io/konamata/seismotracker/dbt:arm64-latest # arm64
    # image: ghcr.io/konamata/seismotracker/dbt:latest # amd64
    build:
      context: ./dbt
      dockerfile: Dockerfile
      target: dbt-postgres
    pull_policy: build
    restart: always
    container_name: seismotracker-dbt
    init: true
    depends_on:
      - seismotracker-postgres
    environment:
      - DBT_PROFILES_DIR=/root/.dbt
    entrypoint: ["/bin/sh", "-c"]
    command:
      - while true; do echo "Running dbt run..."; dbt run; echo "Sleeping for 30 seconds..."; sleep 30; done
    volumes:
      - /project/seismotracker/lightdash_dbt:/usr/app/dbt
      - /project/seismotracker/dbt/profiles.yml:/root/.dbt/profiles.yml
    networks:
      - seismotracker-network
    labels:
      com.centurylinklabs.watchtower.enable: true



networks:
  seismotracker-network:
    name: seismotracker-network
    driver: bridge