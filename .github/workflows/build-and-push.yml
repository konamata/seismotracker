name: Build and Push Multi-Arch Docker Images

on:
  push:
    branches:
      - main
    paths-ignore:
      - '.gitmodules'
      - '*/.git' 
      - '**/lightdash/**'

env:
  PLATFORMS: linux/amd64,linux/arm64

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  check-build-trigger:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, '#BUILD') || contains(github.event.head_commit.message, '#CHECK_LIGHTDASH')
    outputs:
      should_build: ${{ steps.check_commit.outputs.should_build }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Check for BUILD tag in Commit Message
        id: check_commit
        run: |
          if git log -1 --pretty=%B | grep -q "#BUILD"; then
            echo "Triggering build due to #BUILD tag in commit message."
            echo "should_build=true" >> $GITHUB_OUTPUT
          else
            echo "No #BUILD tag found. Skipping build."
            echo "should_build=false" >> $GITHUB_OUTPUT
          fi

  build-and-push:
    runs-on: ubuntu-latest
    needs: check-build-trigger
    if: needs.check-build-trigger.outputs.should_build == 'true' && contains(github.event.head_commit.message, '#BUILD')
    strategy:
      matrix:
        services:
          - name: lightdash
            dockerfile: Dockerfile
          - name: seismotracker
            dockerfile: Dockerfile

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Update lightdash submodule
        run: |
          git submodule update --remote --merge lightdash

      - name: Set up QEMU and Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: ${{ env.PLATFORMS }}

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.MY_PAT_TOKEN }}

      - name: Generate Unique Tag
        id: unique_tag
        run: |
          UNIQUE_TAG="build-${{ github.run_id }}-$(date +%s)"
          echo "Generated unique tag: $UNIQUE_TAG"
          echo "unique_tag=$UNIQUE_TAG" >> $GITHUB_OUTPUT

      - name: Build and Push Multi-Arch Image (No Cache)
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.services.name }}
          file: ${{ matrix.services.name }}/${{ matrix.services.dockerfile }}
          platforms: ${{ env.PLATFORMS }}
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ matrix.services.name }}:${{ steps.unique_tag.outputs.unique_tag }}
            ghcr.io/${{ github.repository_owner }}/${{ matrix.services.name }}:latest
          no-cache: true